Only in exiv2-0.19: Makefile
diff -ur exiv2-0.19.old/config/config.mk.in exiv2-0.19/config/config.mk.in
--- exiv2-0.19.old/config/config.mk.in	Fri Nov 27 06:39:59 2009
+++ exiv2-0.19/config/config.mk.in	Sat Apr 24 01:30:20 2010
@@ -153,7 +153,7 @@
 COMPILE.c = $(CC) $(CFLAGS) $(CPPFLAGS) -c
 # LINK.cc does not need $(LIBS), libtool's dark magic takes care of that
 # when linking a binary with a libtool library.
-LINK.cc = $(CXX) $(LDFLAGS)
+LINK.cc = $(CXX) $(CXXFLAGS) $(LDFLAGS)
 
 # **********************************************************************
 # Installation programs
diff -ur exiv2-0.19.old/src/Makefile exiv2-0.19/src/Makefile
--- exiv2-0.19.old/src/Makefile	Fri Nov 27 00:59:23 2009
+++ exiv2-0.19/src/Makefile	Sat Apr 24 01:26:48 2010
@@ -172,7 +172,7 @@
 EXECUTABLE = $(BINSRC:.cpp=$(EXEEXT))
 
 EXIV2OBJ = $(EXIV2MAIN:.cpp=.o) $(EXIV2SRC:.cpp=.o)
-EXIV2COBJ = $(EXIVCSRC:.c=.o)
+EXIV2COBJ = $(EXIVCSRC:.c=.lo)
 EXIV2BIN = $(EXIV2MAIN:.cpp=)
 EXIV2EXE = $(EXIV2MAIN:.cpp=$(EXEEXT))
 
diff -ur exiv2-0.19.old/src/basicio.cpp exiv2-0.19/src/basicio.cpp
--- exiv2-0.19.old/src/basicio.cpp	Tue Dec 29 10:24:40 2009
+++ exiv2-0.19/src/basicio.cpp	Fri Apr 23 23:56:34 2010
@@ -261,7 +261,7 @@
         int rc = 0;
         if (p_->pMappedArea_ != 0) {
 #if defined EXV_HAVE_MMAP && defined EXV_HAVE_MUNMAP
-            if (::munmap(p_->pMappedArea_, p_->mappedLength_) != 0) {
+            if (::munmap((char *) p_->pMappedArea_, p_->mappedLength_) != 0) {
                 rc = 1;
             }
 #elif defined WIN32 && !defined __CYGWIN__
diff -ur exiv2-0.19.old/src/convert.cpp exiv2-0.19/src/convert.cpp
--- exiv2-0.19.old/src/convert.cpp	Mon Dec 28 09:47:58 2009
+++ exiv2-0.19/src/convert.cpp	Sat Apr 24 00:08:01 2010
@@ -583,7 +583,8 @@
             double dhour = pos->toFloat(0);
             double dmin = pos->toFloat(1);
             // Hack: Need Value::toDouble
-            URational r = pos->toRational(2);
+            Rational tempr = pos->toRational(2);
+            URational r(tempr.first, tempr.second);
             double dsec = static_cast<double>(r.first)/r.second;
 
             if (!pos->value().ok()) {
diff -ur exiv2-0.19.old/src/crwimage.cpp exiv2-0.19/src/crwimage.cpp
--- exiv2-0.19.old/src/crwimage.cpp	Fri Nov 27 00:59:23 2009
+++ exiv2-0.19/src/crwimage.cpp	Sat Apr 24 00:09:09 2010
@@ -1034,7 +1034,8 @@
         if (ifdId == canonSiIfdId) {
             // Exif.Photo.FNumber
             float f = fnumber(canonEv(aperture));
-            URational ur = floatToRationalCast(f);
+            Rational tempur = floatToRationalCast(f);
+            URational ur(tempur.first, tempur.second);
             URationalValue fn;
             fn.value_.push_back(ur);
             image.exifData().add(ExifKey("Exif.Photo.FNumber"), &fn);
diff -ur exiv2-0.19.old/src/exiv2.cpp exiv2-0.19/src/exiv2.cpp
--- exiv2-0.19.old/src/exiv2.cpp	Mon Dec 28 09:47:58 2009
+++ exiv2-0.19/src/exiv2.cpp	Sat Apr 24 00:34:14 2010
@@ -52,6 +52,10 @@
 #include <cassert>
 #include <cctype>
 
+#ifdef EXV_ENABLE_NLS
+# include <clocale>
+#endif
+
 // *****************************************************************************
 // local declarations
 namespace {
@@ -125,7 +129,7 @@
 int main(int argc, char* const argv[])
 {
 #ifdef EXV_ENABLE_NLS
-    setlocale(LC_ALL, "");
+    std::setlocale(LC_ALL, "");
     bindtextdomain(EXV_PACKAGE, EXV_LOCALEDIR);
     textdomain(EXV_PACKAGE);
 #endif
diff -ur exiv2-0.19.old/src/jpgimage.cpp exiv2-0.19/src/jpgimage.cpp
--- exiv2-0.19.old/src/jpgimage.cpp	Mon Dec 28 09:11:23 2009
+++ exiv2-0.19/src/jpgimage.cpp	Sat Apr 24 00:26:10 2010
@@ -782,7 +782,7 @@
             }
             else if (   skipApp1Exif == count
                      || skipApp1Xmp  == count
-                     || find(skipApp13Ps3.begin(), skipApp13Ps3.end(), count) != skipApp13Ps3.end()
+                     || std::find(skipApp13Ps3.begin(), skipApp13Ps3.end(), count) != skipApp13Ps3.end()
                      || skipCom      == count) {
                 --search;
                 io_->seek(size-bufRead, BasicIo::cur);
diff -ur exiv2-0.19.old/xmpsdk/src/XMPCore_Impl.hpp exiv2-0.19/xmpsdk/src/XMPCore_Impl.hpp
--- exiv2-0.19.old/xmpsdk/src/XMPCore_Impl.hpp	Tue Jul  7 10:13:03 2009
+++ exiv2-0.19/xmpsdk/src/XMPCore_Impl.hpp	Fri Apr 23 23:44:03 2010
@@ -50,7 +50,7 @@
 typedef XMP_VarString::iterator			XMP_VarStringPos;
 typedef XMP_VarString::const_iterator	XMP_cVarStringPos;
 
-typedef std::pair < XMP_VarString, XMP_VarString >	XMP_StringPair;
+typedef std::pair < const XMP_VarString, XMP_VarString >	XMP_StringPair;
 
 typedef std::map < XMP_VarString, XMP_VarString > XMP_StringMap;
 typedef XMP_StringMap::iterator			XMP_StringMapPos;
diff -ur exiv2-0.19.old/xmpsdk/src/XMPMeta.cpp exiv2-0.19/xmpsdk/src/XMPMeta.cpp
--- exiv2-0.19.old/xmpsdk/src/XMPMeta.cpp	Sun Dec 27 10:30:07 2009
+++ exiv2-0.19/xmpsdk/src/XMPMeta.cpp	Fri Apr 23 23:53:49 2010
@@ -1075,8 +1075,8 @@
 		XMP_StringPair	newNS ( nsURI, uniqPrefix );
 		uriPos = sNamespaceURIToPrefixMap->insert ( sNamespaceURIToPrefixMap->end(), newNS );
 		
-		newNS.first.swap ( newNS.second );
-		(void) sNamespacePrefixToURIMap->insert ( sNamespacePrefixToURIMap->end(), newNS );
+		XMP_StringPair	reverseNS ( uniqPrefix, nsURI );
+		(void) sNamespacePrefixToURIMap->insert ( sNamespacePrefixToURIMap->end(), reverseNS );
 
 	}
 	
